/**
 * Woleet signature backend kit
 * This server aims to provide an easy way to sign a hash and proving that you are the corresponding signee on demand by providing two endpoints:    `/identity` let **anyone** verify that you own the private key corresponding to your address.    `/signature` let **you** (and only you) sign a hash.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['ApiClient'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../ApiClient'));
    } else {
        // Browser globals (root is window)
        if (!root.WoleetSignatureBackendKit) {
            root.WoleetSignatureBackendKit = {};
        }
        root.WoleetSignatureBackendKit.IdentityOUT = factory(root.WoleetSignatureBackendKit.ApiClient);
    }
}(this, function (ApiClient) {
    'use strict';


    /**
     * The IdentityOUT model module.
     * @module model/IdentityOUT
     * @version 1.0.0
     */

    /**
     * Constructs a new <code>IdentityOUT</code>.
     * @alias module:model/IdentityOUT
     * @class
     */
    const exports = function () {

    };

    /**
     * Constructs a <code>IdentityOUT</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityOUT} obj Optional instance to populate.
     * @return {module:model/IdentityOUT} The populated <code>IdentityOUT</code> instance.
     */
    exports.constructFromObject = function (data, obj) {
        if (data) {
            obj = obj || new exports();

            if (data.hasOwnProperty('rightData')) {
                obj['rightData'] = ApiClient.convertToType(data['rightData'], 'String');
            }
            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
            }
        }
        return obj;
    };

    /**
     * The signature (base 64) of the concatenation of leftData and rightData
     * @member {String} rightData
     */
    exports.prototype['rightData'] = undefined;
    /**
     * Right part used to sign the random message
     * @member {String} signature
     */
    exports.prototype['signature'] = undefined;


    return exports;
}));


